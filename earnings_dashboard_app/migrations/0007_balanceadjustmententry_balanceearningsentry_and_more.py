# Generated by Django 4.1 on 2023-08-06 16:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('earnings_dashboard_app', '0006_rename_incremental_amount_earningsbalanceentry_incremental_earnings_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='BalanceAdjustmentEntry',
            fields=[
                ('balance_entry', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='earnings_dashboard_app.userbalanceentry')),
                ('adjustment_type', models.CharField(choices=[('INC', 'Balance Increase'), ('DEC', 'Balance Decrease')], max_length=3)),
                ('reason', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Balance Adjustment Entries',
            },
        ),
        migrations.CreateModel(
            name='BalanceEarningsEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_earnings', models.DecimalField(decimal_places=2, max_digits=14)),
                ('incremental_earnings', models.DecimalField(blank=True, decimal_places=2, max_digits=14)),
                ('service_fee', models.DecimalField(decimal_places=2, max_digits=14)),
                ('fee_type_ref', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'Balance Earnings Entries',
            },
        ),
        migrations.CreateModel(
            name='BalancePaymentEntry',
            fields=[
                ('balance_entry', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='earnings_dashboard_app.userbalanceentry')),
                ('entity_account_ref', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'Balance Payment Entries',
            },
        ),
        migrations.RemoveField(
            model_name='adjustmentbalanceentry',
            name='user_balance',
        ),
        migrations.RemoveField(
            model_name='earningsbalanceentry',
            name='product',
        ),
        migrations.RemoveField(
            model_name='earningsbalanceentry',
            name='user_balance_entry',
        ),
        migrations.RemoveField(
            model_name='paymentbalanceentry',
            name='user_balance',
        ),
        migrations.DeleteModel(
            name='UserAdjustmentBalanceEntryProxy',
        ),
        migrations.DeleteModel(
            name='UserEarningsBalanceEntryProxy',
        ),
        migrations.DeleteModel(
            name='UserPaymentBalanceEntryProxy',
        ),
        migrations.CreateModel(
            name='BalanceAdjustmentEntryProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Balance Adjustment Entry',
                'verbose_name_plural': 'Balance Adjustment Entries',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('earnings_dashboard_app.userbalanceentry',),
        ),
        migrations.CreateModel(
            name='BalanceEarningsEntryProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Earnings Entry',
                'verbose_name_plural': 'Earnings Entries',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('earnings_dashboard_app.userbalanceentry',),
        ),
        migrations.CreateModel(
            name='BalancePaymentEntryProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Balance Payment Entry',
                'verbose_name_plural': 'Balance Payment Entries',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('earnings_dashboard_app.userbalanceentry',),
        ),
        migrations.RenameField(
            model_name='userbalanceentry',
            old_name='user_balance',
            new_name='user_balance_account',
        ),
        migrations.AlterUniqueTogether(
            name='userbalanceaccount',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='userbalanceaccount',
            name='account_type',
            field=models.CharField(choices=[('AR', 'Accounts Receivable'), ('RP', 'Royalties Payable')], default='AR', max_length=2),
            preserve_default=False,
        ),
        migrations.AlterUniqueTogether(
            name='userbalanceaccount',
            unique_together={('user', 'service_entity', 'currency', 'account_type')},
        ),
        migrations.DeleteModel(
            name='AdjustmentBalanceEntry',
        ),
        migrations.DeleteModel(
            name='EarningsBalanceEntry',
        ),
        migrations.DeleteModel(
            name='PaymentBalanceEntry',
        ),
        migrations.AddField(
            model_name='balanceearningsentry',
            name='balance_entry',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='earnings_dashboard_app.userbalanceentry'),
        ),
        migrations.AddField(
            model_name='balanceearningsentry',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='earnings_dashboard_app.product'),
        ),
        migrations.RemoveField(
            model_name='userbalanceaccount',
            name='payable_type',
        ),
    ]
